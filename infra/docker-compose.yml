services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - miniodata:/data

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb -p local/${MINIO_BUCKET_MEDIA} || true;
      mc mb -p local/${MINIO_BUCKET_QUARANTINE} || true;
      exit 0;
      "

  backend:
    build:
      context: ../backend
      dockerfile: ../infra/docker/backend.Dockerfile
    env_file: ../.env
    depends_on: [postgres, redis, minio, createbuckets]
    ports: ["8000:8000"]
    volumes:
      - ../backend:/app
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  worker:
    build:
      context: ../backend
      dockerfile: ../infra/docker/backend.Dockerfile
    env_file: ../.env
    depends_on: [backend, redis]
    volumes:
      - ../backend:/app
    command: celery -A app.worker.celery_app worker --loglevel=INFO

  frontend:
    build:
      context: ../frontend
      dockerfile: ../infra/docker/frontend.Dockerfile
    env_file: ../.env
    depends_on: [backend]
    ports: ["3000:3000"]
    volumes:
      - ../frontend:/app
    command: pnpm dev --port 3000 --hostname 0.0.0.0

volumes:
  pgdata: {}
  miniodata: {}
